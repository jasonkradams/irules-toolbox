# iRule to direct traffic to a specific node, based on matching content within the URL. Note that could you instead use the pool command if you wished to use full load balancing functionality.
# You need to set a default which matches your default pool, otherwise subsequent connections on the same TCP connection (conflow) will continue to be sent to the specified node.

when HTTP_REQUEST priority 500 {
    # Use switch with glob pattern matching to examine the lowercase URI
    # -glob enables wildcard matching with * to match any characters
    # -- marks the end of switch options
    # [string tolower [HTTP::uri]] converts the URI to lowercase for case-insensitive matching
    switch -glob -- [string tolower [HTTP::uri]] {
        # If the URI contains "hypplanning" anywhere in the path
        # Example: "/path/to/hypplanning/resource" or "?param=hypplanning"
        "*hypplanning*" {
            # Route this request to a specific backend node with IP 10.x.x.x on interface x and port x
            # The %x syntax specifies which network interface to use (route domain)
            node 10.x.x.x%x:x
        }
        # If the URI contains "drmservice" anywhere in the path
        # Example: "/path/to/drmservice/resource" or "?param=drmservice"
        "*drmservice*" {
            # Route this request to a different backend node with IP 10.x.x.x on interface x and port y
            node 10.x.x.x%x:y
        }
        # Implicit default case: if none of the patterns match,
        # the request continues to the default pool or next iRule
        default {
        pool default_pool
        }
    }
}
